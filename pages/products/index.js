import Head from "next/head";
import Link from "next/link";
import styles from "../../styles/ProductDashboard.module.css";
import { useState, useEffect } from "react";

const Products = () => {
  // https://nextjs.org/docs/guides/building-forms
  const [products, setProducts] = useState([]);
  const [categoryFilter, setCategoryFilter] = useState(null); //"Food", "Technology"

  useEffect(() => {
    const getProducts = async () => {
      try {
        const url = categoryFilter
          ? `/api/products?category=${categoryFilter}`
          : "/api/products";
        const response = await fetch(url);
        if (response.ok) {
          const data = await response.json();
          setProducts(data);
        } else {
          throw new Error(
            `Fetch fehlgeschlagen mit Status: ${response.status}`
          );
        }
      } catch (error) {
        console.log(error);
        alert(error.message);
      }
    };
    getProducts();
  }, [categoryFilter]);

  const deleteItem = async (productId) => {
    try {
      const response = await fetch(`/api/products/${productId}`, {
        method: "DELETE",
      });
      if (response.ok) {
        const data = await response.json();
        alert("Deletion successful.");
        window.location.reload();
      } else {
        throw new Error(`Fetch failed with status code ${response.status}`);
      }
    } catch (error) {
      alert("Delete item failed. " + error);
    }
  };

  return (
    <>
      <Head>
        <title>Product Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h1 className="test">Products Dashboard</h1>
        <h2>Currently stored Products</h2>
        <select
          onChange={(event) => {
            if (event.target.value === "all") {
              setCategoryFilter(null);
            } else {
              setCategoryFilter(event.target.value);
            }
          }}
        >
          <option value="all">Alle</option>
          <option value="Food">Food</option>
          <option value="Technology">Technology</option>
        </select>
        <p>{categoryFilter}</p>
        <ul className={styles["product-list"]}>
          {products.map((product) => {
            return (
              <>
                <li key={product._id}>
                  <Link href={`/products/${product._id}`}>{product.name}</Link>
                  <button onClick={() => deleteItem(product._id)}>
                    Delete Item
                  </button>
                </li>
              </>
            );
          })}
        </ul>
      </div>
      <h2>Add a new product</h2>
      <form action="/api/index.js" method="POST">
        <ul>
          <li>
            <label for="input-Name">Name: </label>
            <input id="input-Name" name="fieldName" />
          </li>
          <li>
            <label for="input-Category">Category: </label>
            <input id="input-Category" name="fieldCategory" />
          </li>
          <li>
            <label for="input-Detail">Detail: </label>
            <input id="input-Detail" name="fieldDetail" />
          </li>
          <li>
            <button
              onClick={function (event) {
                event.preventDefault();
                console.log(event.target.elements.input - Name.value);
              }}
            >
              Save Product
            </button>
          </li>
        </ul>
      </form>
    </>
  );
};

export default Products;
